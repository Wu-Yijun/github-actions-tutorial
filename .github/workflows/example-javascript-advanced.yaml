name: Example - Run Javascript Advanced

on:
  workflow_dispatch:
  push:

jobs:
  run-javascript:
    runs-on: ubuntu-latest
    steps:
      - name: Save functions of github-script to file
        uses: actions/github-script@main
        with:
          script: |
            // save to file
            const fs = require('fs')
            const util = require('util');
            fs.writeFileSync('github-script.txt', 'this = ' + util.inspect(this) + '\n\n')
            fs.appendFileSync('github-script.txt', 'github = ' + util.inspect(github) + '\n\n')
            fs.appendFileSync('github-script.txt', 'context = ' + util.inspect(context) + '\n\n')
            fs.appendFileSync('github-script.txt', 'core = ' + util.inspect(core) + '\n\n')
            fs.appendFileSync('github-script.txt', 'glob = ' + util.inspect(glob) + '\n\n')
            fs.appendFileSync('github-script.txt', 'io = ' + util.inspect(io) + '\n\n')
            fs.appendFileSync('github-script.txt', 'exec = ' + util.inspect(exec) + '\n\n')
            fs.appendFileSync('github-script.txt', 'require = ' + util.inspect(require) + '\n\n')
      - name: upload-artifact
        uses: actions/upload-artifact@main
        with:
          name: github-script-context
          path: github-script.txt

      - name: Check out code
        uses: actions/checkout@main
      - name: Run Hello-world.js
        uses: actions/github-script@main
        with:
          script: |
            const fs = require('fs')
            const code = fs.readFileSync('.github/workflows/example/hello-world.js', 'utf8')
            eval(code)

      - name: Use REST Api to set latest release to hello world
        uses: actions/github-script@main
        with:
          script: |
            const response = await github.request('GET /repos/{owner}/{repo}/releases/latest', {
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            console.log(response.data)
            const release = response.data
            const result = await github.request('PATCH /repos/{owner}/{repo}/releases/{release_id}', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.id,
              tag_name: 'v0.0.0.1',
              name: 'Hello World Release',
              body: 'Hello World ' + context.runNumber,
            })
            console.log(result.data)
          
      # input and output
      - name: Return back value
        uses: actions/github-script@main
        id: my-script
        with:
          result-encoding: string
          script: |
            return 'Hello, World!'
      - name: Get result
        run: echo "${{steps.my-script.outputs.result}}"

      - run: HELLO="hello, "
      - name: get and set env
        uses: actions/github-script@main
        with:
          script: |
            const hello = core.getInput('HELLO')
            console.log(hello)
            core.exportVariable('WORLD', hello + 'world!')
      - run: echo $WORLD

      - run: echo 'greeting = "Hello, World!"' > $GITHUB_ENV
      - name: get env
        uses: actions/github-script@main
        with:
          script: |
            const greeting = process.env.greeting
            console.log(greeting)
            