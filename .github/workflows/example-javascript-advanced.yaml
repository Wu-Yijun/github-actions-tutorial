name: Example - Run Javascript Advanced

on:
  push:
  workflow_dispatch:

jobs:
  run-javascript:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@main

      # use REST Api to set latest release to hello world + runNumber
      - name: Use REST Api to set latest release to hello world
        uses: actions/github-script@main
        with:
          script: |
            const response = await github.request('GET /repos/{owner}/{repo}/releases/latest', {
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            console.log(response.data)
            const release = response.data
            const result = await github.request('PATCH /repos/{owner}/{repo}/releases/{release_id}', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.id,
              tag_name: 'v0.0.0.1',
              name: 'Hello World Release',
              body: 'Hello World ' + context.runNumber,
            })
            console.log(result.data)
          
      # input and output
      - name: set input
        id: set-input
        run: echo 'hello = "Hello"' > $GITHUB_ENV
      - name: get and set env
        id: get-and-set-env
        uses: actions/github-script@main
        env:
          COMMA: ', '
        with:
          script: |
            const hello = process.env.hello
            const hello2 = "${{ steps.set-input.outputs.hello }}"
            const comma = process.env.COMMA
            console.log(hello, hello2, comma)
            core.exportVariable('WORLD', hello + comma + 'world!')
            return { greeting: hello2 + comma + 'world!', array: [1, 2, 3]}
          result-encoding: json
      - name: print output
        run: |
          echo $WORLD
          echo "${{ steps.get-and-set-env.outputs.result.greeting }}"
          echo "${{ steps.get-and-set-env.outputs.result.array }}"
        
      # run script from file
      - name: run outer script
        uses: actions/github-script@main
        with:
          script: |
            /* run script from file */
            const fs = require('fs')
            console.log(fs);
            const script = fs.readFileSync('.github/workflows/example/hello-world.js')
            console.log(script);
            const text = "Eval script"
            console.log(text);
            eval(script)
            console.log('Done');
            /* run sync script from file */
            const script_sync = require('.github/workflows/example/hello-world.js')
            script_sync({github, context, core, "Synchronous function"})
            /* run async script from file */
            const script_async = require('.github/workflows/example/hello-world-async.js')
            await script({github, context, core, "Asynchronous function"})
      
      # save context to file
      - name: Save functions of github-script to file
        uses: actions/github-script@main
        with:
          script: |
            const fs = require('fs')
            const util = require('util');
            fs.writeFileSync('github-script.txt', 'this = ' + util.inspect(this) + '\n\n')
            fs.appendFileSync('github-script.txt', 'github = ' + util.inspect(github) + '\n\n')
            fs.appendFileSync('github-script.txt', 'context = ' + util.inspect(context) + '\n\n')
            fs.appendFileSync('github-script.txt', 'core = ' + util.inspect(core) + '\n\n')
            fs.appendFileSync('github-script.txt', 'glob = ' + util.inspect(glob) + '\n\n')
            fs.appendFileSync('github-script.txt', 'io = ' + util.inspect(io) + '\n\n')
            fs.appendFileSync('github-script.txt', 'exec = ' + util.inspect(exec) + '\n\n')
            fs.appendFileSync('github-script.txt', 'require = ' + util.inspect(require) + '\n\n')
            fs.appendFileSync('github-script.txt', 'process = ' + util.inspect(process) + '\n\n')
            fs.appendFileSync('github-script.txt', 'steps = ' + util.inspect(steps) + '\n\n')
      - name: upload-artifact
        uses: actions/upload-artifact@main
        with:
          name: github-script-context
          path: github-script.txt
